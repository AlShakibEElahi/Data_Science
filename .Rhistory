}
}
features <- data[, significant_vars]
scaled_data <- scale(features)
wss_values <- c()
for (i in 1:10) {
kmeans_model <- kmeans(scaled_data, centers=i, nstart=10)
wss_values[i] <- kmeans_model$tot.withinss
}
ggplot(data.frame(k=1:10, wss=wss_values), aes(x=k, y=wss)) +
geom_point(size=3) +
geom_line() +
labs(x="Number of clusters K", y="Within-cluster sum of squares")
k_means_model <- kmeans(scaled_data, 2)
autoplot(k_means_model,features,frame = TRUE)
features$cluster <- k_means_model$cluster
cross_tab <- table(data$Private, features$cluster)
print(cross_tab)
library(dplyr)
library(stats)
library(ggplot2)
library(NbClust)
library(ggfortify)
library(cluster)
data <- read.csv("D:/Codes/Data_Science/Datasets/College_Data.csv")
data$Private <- ifelse(data$Private == "Yes", 1, 0)
remove_outliers <- function(df) {
for (col in names(df)) {
# Calculate the upper and lower limits using boxplot method
q1 <- quantile(df[[col]], 0.25)
q3 <- quantile(df[[col]], 0.75)
iqr <- q3 - q1
upper_limit <- q3 + 1.5*iqr
lower_limit <- q1 - 1.5*iqr
# Remove outliers outside the limits
df[[col]][df[[col]] > upper_limit] <- NA
df[[col]][df[[col]] < lower_limit] <- NA
# Remove rows with missing values
df <- df[complete.cases(df), ]
}
return(df)
}
df <- remove_outliers(data)
df <- remove_outliers(data[,2])
library(dplyr)
library(stats)
library(ggplot2)
library(NbClust)
library(ggfortify)
library(cluster)
data <- read.csv("D:/Codes/Data_Science/Datasets/College_Data.csv")
data$Private <- ifelse(data$Private == "Yes", 1, 0)
remove_outliers <- function(df) {
for (col in names(df)) {
# Calculate the upper and lower limits using boxplot method
q1 <- quantile(df[[col]], 0.25)
q3 <- quantile(df[[col]], 0.75)
iqr <- q3 - q1
upper_limit <- q3 + 1.5*iqr
lower_limit <- q1 - 1.5*iqr
# Remove outliers outside the limits
df[[col]][df[[col]] > upper_limit] <- NA
df[[col]][df[[col]] < lower_limit] <- NA
# Remove rows with missing values
df <- df[complete.cases(df), ]
}
return(df)
}
df <- remove_outliers(data[,2])
remove_outliers <- function(df) {
for (col in names(df)) {
# Calculate the upper and lower limits using boxplot method
qs <- quantile(df[[col]], probs = c(0.25, 0.75), na.rm = TRUE)
q1 <- qs[1]
q3 <- qs[2]
iqr <- q3 - q1
upper_limit <- q3 + 1.5*iqr
lower_limit <- q1 - 1.5*iqr
# Remove outliers outside the limits
df[[col]][df[[col]] > upper_limit] <- NA
df[[col]][df[[col]] < lower_limit] <- NA
# Remove rows with missing values
df <- df[complete.cases(df), ]
}
return(df)
}
df <- remove_outliers(data[,2])
df <- data.frame(remove_outliers(data[,2]))
View(df)
library(dplyr)
library(stats)
library(ggplot2)
library(NbClust)
library(ggfortify)
library(cluster)
data <- read.csv("D:/Codes/Data_Science/Datasets/College_Data.csv")
data$Private <- ifelse(data$Private == "Yes", 1, 0)
remove_outliers <- function(data) {
outliers <- list()
for (col in names(data)[3:length(names(data))]) {
box <- boxplot(data[[col]], plot = FALSE)
iqr <- diff(box$stats[c(2, 4)])
upper_limit <- box$stats[4] + 1.5 * iqr
lower_limit <- box$stats[2] - 1.5 * iqr
outliers[[col]] <- which(data[[col]] < lower_limit | data[[col]] > upper_limit)
data[[col]][outliers[[col]]] <- NA
}
data <- na.omit(data)
return(data)
}
dataframe<-remove_outliers(data)
View(dataframe)
data<-remove_outliers(data)
significant_vars <- c()
for (col in names(data)[3:length(names(data))]) {
table <- table(data$Private, data[[col]])
res <- chisq.test(table)
p_val <- res$p.value
cat("P value for: ", col, " = ", p_val, "\n")
if (p_val < 0.05) {
significant_vars <- c(significant_vars, col)
}
}
features <- data[, significant_vars]
scaled_data <- scale(features)
wss_values <- c()
for (i in 1:10) {
kmeans_model <- kmeans(scaled_data, centers=i, nstart=10)
wss_values[i] <- kmeans_model$tot.withinss
}
ggplot(data.frame(k=1:10, wss=wss_values), aes(x=k, y=wss)) +
geom_point(size=3) +
geom_line() +
labs(x="Number of clusters K", y="Within-cluster sum of squares")
k_means_model <- kmeans(scaled_data, 2)
autoplot(k_means_model,features,frame = TRUE)
features$cluster <- k_means_model$cluster
cross_tab <- table(data$Private, features$cluster)
print(cross_tab)
ggplot(data.frame(k=1:10, wss=wss_values), aes(x=k, y=wss)) +
geom_point(size=3) +
geom_line() +
labs(x="Number of clusters K", y="Within-cluster sum of squares")
library(dplyr)
library(stats)
library(ggplot2)
library(NbClust)
library(ggfortify)
library(cluster)
data <- read.csv("D:/Codes/Data_Science/Datasets/College_Data.csv")
data$Private <- ifelse(data$Private == "Yes", 1, 0)
library(dplyr)
library(stats)
library(ggplot2)
library(NbClust)
library(ggfortify)
library(cluster)
data <- read.csv("D:/Codes/Data_Science/Datasets/College_Data.csv")
data$Private <- ifelse(data$Private == "Yes", 1, 0)
/*
data<-remove_outliers(data)
library(dplyr)
library(stats)
library(ggplot2)
library(NbClust)
library(ggfortify)
library(cluster)
data <- read.csv("D:/Codes/Data_Science/Datasets/College_Data.csv")
data$Private <- ifelse(data$Private == "Yes", 1, 0)
boxplot(data$Grad.Rate)
outliers <- boxplot.stats(data$Grad.Rate)$out
cat("Outliers: ", outliers, "\n")
outlier_row <- which(data$Grad.Rate == 118)
data <- data[-outlier_row,]
data$Private <- ifelse(data$Private == "Yes", 1, 0)
boxplot(data$Grad.Rate)
library(dplyr)
library(stats)
library(ggplot2)
library(NbClust)
library(ggfortify)
library(cluster)
data <- read.csv("D:/Codes/Data_Science/Datasets/College_Data.csv")
data$Private <- ifelse(data$Private == "Yes", 1, 0)
boxplot(data$Grad.Rate)
outliers <- boxplot.stats(data$Grad.Rate)$out
cat("Outliers: ", outliers, "\n")
outlier_row <- which(data$Grad.Rate == 118)
data <- data[-outlier_row,]
significant_vars <- c()
library(dplyr)
function (..., list = character(), package = NULL, lib.loc = NULL,
verbose = getOption("verbose"), envir = .GlobalEnv, overwrite = TRUE)
function (x, df1, df2, ncp, log = FALSE)
library(dplyr)
library(stats)
library(ggplot2)
library(NbClust)
library(ggfortify)
library(cluster)
data <- read.csv("D:/Codes/Data_Science/Datasets/College_Data.csv")
data$Private <- ifelse(data$Private == "Yes", 1, 0)
boxplot(data$Grad.Rate)
outliers <- boxplot.stats(data$Grad.Rate)$out
cat("Outliers: ", outliers, "\n")
outlier_row <- which(data$Grad.Rate == 118)
data <- data[-outlier_row,]
significant_vars <- c()
for (col in names(data)[3:length(names(data))]) {
table <- table(data$Private, data[[col]])
res <- chisq.test(table)
p_val <- res$p.value
cat("P value for: ", col, " = ", p_val, "\n")
if (p_val < 0.05) {
significant_vars <- c(significant_vars, col)
}
}
features <- data[, significant_vars]
scaled_data <- scale(features)
wss_values <- c()
for (i in 1:10) {
kmeans_model <- kmeans(scaled_data, centers=i, nstart=10)
wss_values[i] <- kmeans_model$tot.withinss
}
ggplot(data.frame(k=1:10, wss=wss_values), aes(x=k, y=wss)) +
geom_point(size=3) +
geom_line() +
labs(x="Number of clusters K", y="Within-cluster sum of squares")
k_means_model <- kmeans(scaled_data, 2)
autoplot(k_means_model,features,frame = TRUE)
features$cluster <- k_means_model$cluster
cross_tab <- table(data$Private, features$cluster)
print(cross_tab)
k_means_model <- kmeans(scaled_data, 3)
autoplot(k_means_model,features,frame = TRUE)
features$cluster <- k_means_model$cluster
cross_tab <- table(data$Private, features$cluster)
print(cross_tab)
k_means_model <- kmeans(scaled_data, 4)
autoplot(k_means_model,features,frame = TRUE)
features$cluster <- k_means_model$cluster
cross_tab <- table(data$Private, features$cluster)
print(cross_tab)
k_means_model <- kmeans(scaled_data, 7)
autoplot(k_means_model,features,frame = TRUE)
features$cluster <- k_means_model$cluster
cross_tab <- table(data$Private, features$cluster)
print(cross_tab)
k_means_model <- kmeans(scaled_data, 2)
autoplot(k_means_model,features,frame = TRUE)
features$cluster <- k_means_model$cluster
cross_tab <- table(data$Private, features$cluster)
print(cross_tab)
View(scaled_data)
k_means_model <- kmeans(scaled_data, 2)
autoplot(k_means_model,features,frame = TRUE)
features$cluster <- k_means_model$cluster
cross_tab <- table(data$Private, features$cluster)
library(dplyr)
library(stats)
library(ggplot2)
library(NbClust)
library(ggfortify)
library(cluster)
data <- read.csv("D:/Codes/Data_Science/Datasets/College_Data.csv")
data$Private <- ifelse(data$Private == "Yes", 1, 0)
boxplot(data$Grad.Rate)
outliers <- boxplot.stats(data$Grad.Rate)$out
cat("Outliers: ", outliers, "\n")
outlier_row <- which(data$Grad.Rate == 118)
data <- data[-outlier_row,]
significant_vars <- c()
for (col in names(data)[3:length(names(data))]) {
table <- table(data$Private, data[[col]])
res <- chisq.test(table)
p_val <- res$p.value
cat("P value for: ", col, " = ", p_val, "\n")
if (p_val < 0.05) {
significant_vars <- c(significant_vars, col)
}
}
features <- data[, significant_vars]
scaled_data <- scale(features)
wss_values <- c()
for (i in 1:10) {
kmeans_model <- kmeans(scaled_data, centers=i, nstart=10)
wss_values[i] <- kmeans_model$tot.withinss
}
ggplot(data.frame(k=1:10, wss=wss_values), aes(x=k, y=wss)) +
geom_point(size=3) +
geom_line() +
labs(x="Number of clusters K", y="Within-cluster sum of squares")
k_means_model <- kmeans(scaled_data, 2)
autoplot(k_means_model,features,frame = TRUE)
features$cluster <- k_means_model$cluster
cross_tab <- table(data$Private, features$cluster)
print(cross_tab)
data <- read.csv("D:/Codes/Data_Science/Datasets/College_Data.csv")
summary(data)
library(dplyr)
library(stats)
library(ggplot2)
library(NbClust)
library(ggfortify)
library(cluster)
data <- read.csv("D:/Codes/Data_Science/Datasets/College_Data.csv")
data$Private <- ifelse(data$Private == "Yes", 1, 0)
summary(data)
boxplot(data$Grad.Rate)
outliers <- boxplot.stats(data$Grad.Rate)$out
cat("Outliers: ", outliers, "\n")
outlier_row <- which(data$Grad.Rate == 118)
data <- data[-outlier_row,]
significant_vars <- c()
for (col in names(data)[3:length(names(data))]) {
table <- table(data$Private, data[[col]])
res <- chisq.test(table)
p_val <- res$p.value
cat("P value for: ", col, " = ", p_val, "\n")
if (p_val < 0.05) {
significant_vars <- c(significant_vars, col)
}
}
features <- data[, significant_vars]
scaled_data <- scale(features)
wss_values <- c()
for (i in 1:10) {
kmeans_model <- kmeans(scaled_data, centers=i, nstart=10)
wss_values[i] <- kmeans_model$tot.withinss
}
ggplot(data.frame(k=1:10, wss=wss_values), aes(x=k, y=wss)) +
geom_point(size=3) +
geom_line() +
labs(x="Number of clusters K", y="Within-cluster sum of squares")
library(dplyr)
library(stats)
library(ggplot2)
library(NbClust)
library(ggfortify)
library(cluster)
data <- read.csv("D:/Codes/Data_Science/Datasets/College_Data.csv")
data$Private <- ifelse(data$Private == "Yes", 1, 0)
data<-table(data$Private)
data
library(dplyr)
library(stats)
library(ggplot2)
library(NbClust)
library(ggfortify)
library(cluster)
data <- read.csv("D:/Codes/Data_Science/Datasets/College_Data.csv")
summary(data)
data$Private <- ifelse(data$Private == "Yes", 1, 0)
data<-table(data$Private)
print(data)
boxplot(data$Grad.Rate)
outliers <- boxplot.stats(data$Grad.Rate)$out
cat("Outliers: ", outliers, "\n")
outlier_row <- which(data$Grad.Rate == 118)
data <- data[-outlier_row,]
significant_vars <- c()
for (col in names(data)[3:length(names(data))]) {
table <- table(data$Private, data[[col]])
res <- chisq.test(table)
p_val <- res$p.value
cat("P value for: ", col, " = ", p_val, "\n")
if (p_val < 0.05) {
significant_vars <- c(significant_vars, col)
}
}
features <- data[, significant_vars]
scaled_data <- scale(features)
wss_values <- c()
for (i in 1:10) {
kmeans_model <- kmeans(scaled_data, centers=i, nstart=10)
wss_values[i] <- kmeans_model$tot.withinss
}
ggplot(data.frame(k=1:10, wss=wss_values), aes(x=k, y=wss)) +
geom_point(size=3) +
geom_line() +
labs(x="Number of clusters K", y="Within-cluster sum of squares")
k_means_model <- kmeans(scaled_data, 2)
autoplot(k_means_model,features,frame = TRUE)
features$cluster <- k_means_model$cluster
cross_tab <- table(data$Private, features$cluster)
print(cross_tab)
library(dplyr)
library(stats)
library(ggplot2)
library(NbClust)
library(ggfortify)
library(cluster)
data <- read.csv("D:/Codes/Data_Science/Datasets/College_Data.csv")
summary(data)
data$Private <- ifelse(data$Private == "Yes", 1, 0)
total_Types_Count<-table(data$Private)
print(total_Types_Count)
boxplot(data$Grad.Rate)
outliers <- boxplot.stats(data$Grad.Rate)$out
cat("Outliers: ", outliers, "\n")
outlier_row <- which(data$Grad.Rate == 118)
data <- data[-outlier_row,]
significant_vars <- c()
for (col in names(data)[3:length(names(data))]) {
table <- table(data$Private, data[[col]])
res <- chisq.test(table)
p_val <- res$p.value
cat("P value for: ", col, " = ", p_val, "\n")
if (p_val < 0.05) {
significant_vars <- c(significant_vars, col)
}
}
features <- data[, significant_vars]
scaled_data <- scale(features)
wss_values <- c()
for (i in 1:10) {
kmeans_model <- kmeans(scaled_data, centers=i, nstart=10)
wss_values[i] <- kmeans_model$tot.withinss
}
ggplot(data.frame(k=1:10, wss=wss_values), aes(x=k, y=wss)) +
geom_point(size=3) +
geom_line() +
labs(x="Number of clusters K", y="Within-cluster sum of squares")
k_means_model <- kmeans(scaled_data, 2)
autoplot(k_means_model,features,frame = TRUE)
features$cluster <- k_means_model$cluster
cross_tab <- table(data$Private, features$cluster)
print(cross_tab)
library(dplyr)
library(stats)
library(ggplot2)
library(NbClust)
library(ggfortify)
library(cluster)
data <- read.csv("D:/Codes/Data_Science/Datasets/College_Data.csv")
summary(data)
data$Private <- ifelse(data$Private == "Yes", 0, 1)
total_Types_Count<-table(data$Private)
print(total_Types_Count)
boxplot(data$Grad.Rate)
outliers <- boxplot.stats(data$Grad.Rate)$out
cat("Outliers: ", outliers, "\n")
outlier_row <- which(data$Grad.Rate == 118)
data <- data[-outlier_row,]
significant_vars <- c()
for (col in names(data)[3:length(names(data))]) {
table <- table(data$Private, data[[col]])
res <- chisq.test(table)
p_val <- res$p.value
cat("P value for: ", col, " = ", p_val, "\n")
if (p_val < 0.05) {
significant_vars <- c(significant_vars, col)
}
}
features <- data[, significant_vars]
scaled_data <- scale(features)
wss_values <- c()
for (i in 1:10) {
kmeans_model <- kmeans(scaled_data, centers=i, nstart=10)
wss_values[i] <- kmeans_model$tot.withinss
}
ggplot(data.frame(k=1:10, wss=wss_values), aes(x=k, y=wss)) +
geom_point(size=3) +
geom_line() +
labs(x="Number of clusters K", y="Within-cluster sum of squares")
k_means_model <- kmeans(scaled_data, 2)
autoplot(k_means_model,features,frame = TRUE)
features$cluster <- k_means_model$cluster
cross_tab <- table(data$Private, features$cluster)
print(cross_tab)
library(dplyr)
library(stats)
library(ggplot2)
library(NbClust)
library(ggfortify)
library(cluster)
data <- read.csv("D:/Codes/Data_Science/Datasets/College_Data.csv")
summary(data)
data$Private <- ifelse(data$Private == "Yes", 1, 0)
total_Types_Count<-table(data$Private)
print(total_Types_Count)
boxplot(data$Grad.Rate)
outliers <- boxplot.stats(data$Grad.Rate)$out
cat("Outliers: ", outliers, "\n")
outlier_row <- which(data$Grad.Rate == 118)
data <- data[-outlier_row,]
significant_vars <- c()
for (col in names(data)[3:length(names(data))]) {
table <- table(data$Private, data[[col]])
res <- chisq.test(table)
p_val <- res$p.value
cat("P value for: ", col, " = ", p_val, "\n")
if (p_val < 0.05) {
significant_vars <- c(significant_vars, col)
}
}
features <- data[, significant_vars]
scaled_data <- scale(features)
wss_values <- c()
for (i in 1:10) {
kmeans_model <- kmeans(scaled_data, centers=i, nstart=10)
wss_values[i] <- kmeans_model$tot.withinss
}
ggplot(data.frame(k=1:10, wss=wss_values), aes(x=k, y=wss)) +
geom_point(size=3) +
geom_line() +
labs(x="Number of clusters K", y="Within-cluster sum of squares")
k_means_model <- kmeans(scaled_data, 2)
autoplot(k_means_model,features,frame = TRUE)
features$cluster <- k_means_model$cluster
cross_tab <- table(data$Private, features$cluster)
print(cross_tab)
